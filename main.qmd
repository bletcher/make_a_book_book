# Steps

## Get started

### Github account  
Create a github account at github.com  

### Download
[Download Quatro](https://quarto.org/docs/get-started/)


## Steps to set up the book

### Github

#### Create github repo
Go to your github site and create a new repository (repo) for the book from the `Repositories` tab  

![New repo](images_tim/repo_Tim/.png)

***

Use a meaningful name for the book. This repo name will also be the name of your RStudio project (see below) and the default name for the `github.io` link (e.g. `https://bletcher.github.io/make_a_book_book/`).

Set up your repo using the settings as in the image below:

![Create a new repo](images_tim/create_repo_tim.png)

Hit `Create repository` to create the new repo.

#### Edit readme file

Edit the readme file by hitting the pencil icon as shown below:

![Edit readme](images_tim/edit_readme_Tim.png)

<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal1">View in Full Screen</button>

<div class="modal fade" id="exampleModal1" tabindex="-1">
<div class="modal-dialog modal-dialog-centered p-8" style="max-width: 90%">
<div class="modal-content">

![Edit readme](images_tim/edit_readme_Tim.png)

</div>
</div>
</div>
***  


Add a short description about the repo (book). I like to include the link to the (eventual) github.io page (see below). Hit ` Commit changes` when done and return to the main repo page. 

#### Copy repo link

Copy the repo link by hitting the green `Code` button and hitting the copy icon (lower red arrow). We will use this link to set up the project in rStudio.

![Copy link](images_tim/copy_link_Tim.png)

<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal2">View in Full Screen</button>

<div class="modal fade" id="exampleModal2" tabindex="-1">
<div class="modal-dialog modal-dialog-centered p-8" style="max-width: 90%">
<div class="modal-content">

![Copy link](images_tim/copy_link_Tim.png)

</div>
</div>
</div>
***  


### RStudio

#### Create project

Now in RStudio, create a new project based on your new repo. In the upper right corner, click on `New project` and click `Version control`. 

![Create project](images_tim/create_project2_Tim.png)

<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal3">View in Full Screen</button>

<div class="modal fade" id="exampleModal3" tabindex="-1">
<div class="modal-dialog modal-dialog-centered p-8" style="max-width: 90%">
<div class="modal-content">

![Create project](images_tim/create_project2_Tim.png)

</div>
</div>
</div>  
***  

Click `Git` and paste the copied name of your repo into `Repository URL`. This will automatically use your repo name as the project directory and the project name. Make sure to pick a subdirectory that makes sense for your file organization - I use a `projects` subdirectory for all my project.  

Hit `Create project` to create the new project and the few files from your repo will be copied into the project directory.

#### Copy base Quarto files

we want to copy three files from the `make_a_book_book` [repo](https://github.com/bletcher/make_a_book_book) to help us get started. The files are `_quarto.yml`, `index.qmd` and `build_book.R`.  

You can go to the repo and hit the green `Code` button as before and download ZIP file, extract the files and add them to your project folder, or you can just open two new files in RStudio and copy and paste the code in from the repo files and name the files with the repo file names. Since there are only two files to add, I would just copy and paste (but you will need to deal with spacing issues in the `_quarto.yml` file (see below).  

Create three new R files in Rstudio, open each file in the repo and copy and paste the text into the files in RStudio so that RStudio looks like this (without the `build_book.R` file):

![Added files](images_tim/add_files_Tim.png)

<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal4">View in Full Screen</button>

<div class="modal fade" id="exampleModal4" tabindex="-1">
<div class="modal-dialog modal-dialog-centered p-8" style="max-width: 90%">
<div class="modal-content">

![Added files](images_tim/add_files_Tim.png)

</div>
</div>
</div>
***  

The `_quarto.yml` file specifies Quarto options and sets up the structure of the book.  
The `index.qmd` file is the landing page for our (soon-to-be) github.io web page.
The `build_book.R` file contains code for building the whole book or one chapter at a time (will be useful as your book grows).

When you rename the files, make sure you don't have an appended `*.R` on the filename (e.g. `_quarto.yml.R`). Rename any files that don't match the names as specified above to the correct names. 

In the `book:` section of the `_quarto.yml` file, change the title, the name to fit your project. Also, delete out the `main.qmd` and `links.qmd` rows. These are chapters from the `make_a_book_book` project that you will not use. As you add chapters (`.qmd` files) to you project you will add the Quarto file names here. Be very careful of spacing in the `.yml` file - check the Quarto documentation for `.yml` file details. Make sure the spacing looks like this:

![yml spacing](images_tim/yml_spacing_tim.png)

You can avoid spacing issues by downloading the ZIP file instead of copy/paste (which changes the spacing, agrhh.).  

#### Update `.gitignore`

We need to update the default `.gitignore` fie that was created when we made the repo to **not** ignore files in the `\doc` subdirectory. This subdirectory is where the files for the web page will live.  

Open the `.gitignore` file and comment out the `docs/` line in the `# pkgdown` section so that it looks like this: `#docs/`  

Save the file and close it. You should be able to pretty much ignore the `.gitignore` file from now on.

#### Create docs folder

In the `Files` section of RStudio create a new subdirectory called `docs`. This will hold the documents for the github.io page.

#### First commit

Since we have made some changes to our files, now is a good time to do our first `commit` to github. This will copy the selected files to github and create the next version of the repo. Hit the `Git` tab and select all the files so that your project looks something like this:

![First commit](images_tim/first_commit_tim.png)

<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal6">View in Full Screen</button>

<div class="modal fade" id="exampleModal6" tabindex="-1">
<div class="modal-dialog modal-dialog-centered p-8" style="max-width: 90%">
<div class="modal-content">

![First commit](images_tim/first_commit_tim.png)

</div>
</div>
</div>
***  

Hit `Commit` and add a meaningful message to the `Commit message` text box. Now, hit the `Commit` button and you should see a list of files that have changed. This has created a new version of all your commited files on your local computer. To send this commit to Github, hit the `Close` button and hit `Push` in the upper right hand corner of the `RStudio: Review Changes` box. Now hit the `Close` button on the `Git Push` box and close the `RStudio: Review Changes`. Repeat the commit/push procedure each time you have made significant changes to your project and you want to create a new version. The github.io web site will reflect the most recent version of your project in github.

### github.io

Let's set up the github.io page so that anyone can see the contents of your project on the github.io web page.  

Go back to your github page, open the `Settings` tab, and click on `Pages`. Select `Deploy from a branch` in the `Source` section and select the `/docs` option in the `Select folder` dropdown. Hit `Save` as shown below:

![Set up branch](images_tim/save_settings_tim.png)

<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal7">View in Full Screen</button>

<div class="modal fade" id="exampleModal7" tabindex="-1">
<div class="modal-dialog modal-dialog-centered p-8" style="max-width: 90%">
<div class="modal-content">

![Set up branch](images_tim/save_settings_tim.png)

</div>
</div>
</div>
***  

### RStudio 2

#### Render the book

Open the `build_book.R` file, load the libraries and run `quarto::quarto_render(output_format = "html")`. This will build the book and place the files for the github.io site in the `/docs` folder.

Now you should have files in the `/docs` folder. Redo the commit/Push sequence and we are ready to see the first version of our book on github.io.

### github.io 2

Return to your github page and hit the `Actions` tab. If all went well, you should see a green check icon followed by "pages build and deployment". If there is a green check and not a red x, we have created a web page. With larger books, it can be helpful to check here to see when the build is done before checking your github.io page.

