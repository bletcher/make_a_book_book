# Steps

## Get started

### GitHub account
Create a GitHub account at [github.com](github.com).

### Download Quarto
[Download Quarto](https://quarto.org/docs/get-started/).


## Steps to set up the book

### GitHub

#### Create GitHub repo
Go to your GitHub site and create a new repository (repo) for the book from the `Repositories` tab.

![New repo](images_tim/repo_Tim.png)

***

Use a meaningful name for the book. This repo name will also be the name of your RStudio project (see below) and the default name for the `github.io` link (e.g. `https://bletcher.github.io/make_a_book_book/`).

Set up your repo using the settings as in the image below (but using your own repo name and optional description):

![Create a new repo](images_tim/create_repo_tim.png)

Hit `Create repository` to create the new repo.

***

#### Edit readme file

Edit the readme file by hitting the pencil icon as shown below:

![Edit readme](images_tim/edit_readme_Tim.png)

<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal1">View in Full Screen</button>

<div class="modal fade" id="exampleModal1" tabindex="-1">
<div class="modal-dialog modal-dialog-centered p-8" style="max-width: 90%">
<div class="modal-content">

![Edit readme](images_tim/edit_readme_Tim.png)

</div>
</div>
</div>
***  


Add a short description about the repo (book). Hit ` Commit changes` when done and return to the main repo page.

#### Copy repo link

Copy the repo link by hitting the green `Code` button (upper red arrow) and then the copy icon (lower red arrow). We will use this link to set up the project in RStudio.

![Copy link](images_tim/copy_link_Tim.png)

<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal2">View in Full Screen</button>

<div class="modal fade" id="exampleModal2" tabindex="-1">
<div class="modal-dialog modal-dialog-centered p-8" style="max-width: 90%">
<div class="modal-content">

![Copy link](images_tim/copy_link_Tim.png)

</div>
</div>
</div>
***  


### RStudio

#### Create project

Now in RStudio, create a new project for your repo by clicking on `New project` in the upper right corner, then selecting `Version control`. 

![Create project](images_tim/create_project2_Tim.png)

<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal3">View in Full Screen</button>

<div class="modal fade" id="exampleModal3" tabindex="-1">
<div class="modal-dialog modal-dialog-centered p-8" style="max-width: 90%">
<div class="modal-content">

![Create project](images_tim/create_project2_Tim.png)

</div>
</div>
</div>  
***  

Click `Git` and paste the copied repo link into `Repository URL`. This will automatically use your repo name as the project directory and the project name. Make sure to pick a subdirectory that makes sense for your file organization --- I use a `projects` subdirectory for all my project.  

Hit `Create project` to create the new project. This action copies the files from your GitHub repo into your computer's project directory.

***

#### Copy base Quarto files

The `make_a_book_book` repository contains three files that will help us to start our book: `_quarto.yml` specifies Quarto options and sets up the structure of the book, `index.qmd` is the landing page for our (soon-to-be) github.io web page, and `build_book.R` file contains code for building the whole book or one chapter at a time (which will be useful as your book grows).

Download these files from the `make_a_book_book` [repo's GitHub page](https://github.com/bletcher/make_a_book_book). You can get all three files (plus a bunch more) at once by hitting the green `Code` button, downloading a ZIP file, and extracting the files. Alternatively, you can download the files individually by clicking on each and hitting the download icon.

Add the files to your computer's project folder. When you finish, RStudio should look like this:

![Added files](images_tim/add_files_Tim.png)

<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal4">View in Full Screen</button>

<div class="modal fade" id="exampleModal4" tabindex="-1">
<div class="modal-dialog modal-dialog-centered p-8" style="max-width: 90%">
<div class="modal-content">

![Added files](images_tim/add_files_Tim.png)

</div>
</div>
</div>
*** 

<!-- When you rename the files, make sure you don't have an appended `*.R` on the filename (e.g. `_quarto.yml.R`). Rename any files that don't match the names as specified above to the correct names. -->

In the `book:` section of the `_quarto.yml` file, change the title and author to fit your project. Also, under the `chapters:` subheading, delete the `main.qmd` and `links.qmd` rows. These are chapters from the `make_a_book_book` project that you are reading that you will not use. As you add chapters (`.qmd` files) to your project, you will add rows for the corresponding Quarto file names.

Be very careful to maintain proper spacing in the `.yml` file --- check the Quarto documentation for `.yml` file details. The spacing should look like this:

![yml spacing](images_tim/yml_spacing_tim.png)


#### Update `.gitignore`

We need to update the default `.gitignore` file that was created when we made the repo so that it does **not** ignore files in the `\doc` subdirectory. This subdirectory is where the files for the web page will live.  

Open the `.gitignore` file and comment out the `docs/` line in the `# pkgdown` section so that it looks like this: `#docs/`.

Save the file and close it. You should be able to pretty much ignore the `.gitignore` file from now on.

***

#### Create docs folder

In the `Files` section of RStudio, create a new subdirectory called `docs`. This will hold the documents for the github.io page.

***

#### First commit

Since we have made some changes to our files, now is a good time to do our first `commit` to GitHub. This will copy the selected files to GitHub and create the next version of the repo. Hit the `Git` tab and select all the files so that your project looks something like this:

![First commit](images_tim/first_commit_tim.png)

<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal6">View in Full Screen</button>

<div class="modal fade" id="exampleModal6" tabindex="-1">
<div class="modal-dialog modal-dialog-centered p-8" style="max-width: 90%">
<div class="modal-content">

![First commit](images_tim/first_commit_tim.png)

</div>
</div>
</div>
***  

Hit `Commit` and add a meaningful message to the `Commit message` text box. Now, hit the `Commit` button and you should see a list of files that have changed. This has created a new version of all your commited files on your local computer. To send this commit to GitHub, hit the `Close` button and hit `Push` in the upper right hand corner of the `RStudio: Review Changes` box. Now hit the `Close` button on the `Git Push` box and close the `RStudio: Review Changes`. Repeat the commit/push procedure each time you have made significant changes to your project and you want to create a new version. The github.io web site will reflect the most recent version of your project in GitHub.

### github.io

Let's set up the github.io page so that anyone can see the contents of your project on the github.io web page.  

Go back to your GitHub page, open the `Settings` tab, and click on `Pages`. Select `Deploy from a branch` in the `Source` section and select the `/docs` option in the `Select folder` dropdown. Hit `Save` as shown below:

![Set up branch](images_tim/save_settings_tim.png)

<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal7">View in Full Screen</button>

<div class="modal fade" id="exampleModal7" tabindex="-1">
<div class="modal-dialog modal-dialog-centered p-8" style="max-width: 90%">
<div class="modal-content">

![Set up branch](images_tim/save_settings_tim.png)

</div>
</div>
</div>
***  

### RStudio 2

#### Render the book

Open the `build_book.R` file, load the libraries and run `quarto::quarto_render(output_format = "html")`. This will build the book and place the files for the github.io site in the `/docs` folder.

Now you should have files in the `/docs` folder. Redo the commit/Push sequence and we are ready to see the first version of our book on github.io.

### github.io 2

Return to your GitHub page and hit the `Actions` tab. If all went well, you should see a green check icon followed by "pages build and deployment". If there is a green check and not a red x, we have created a web page. With larger books, it may take a while to update your page, so it can be helpful to check the `Actions` tab to track the build progress and confirm it is done before visiting your github.io page.

Now that you have a working page, itâ€™s a good idea to paste a link to it into your readme file. You can edit the readme file either in RStudio or directly in GitHub. If you edit within GitHub, make sure to `Pull` the project from RStudio in order to update the project on your local computer.


## Workflow
Here is a typical workflow (yours may vary):  

Set up the book  
Make changes to .qmd files  
Build (render) book  
Commit to git  
Push to github  
  
Add new chapter (.qmd file)  
Update _quarto.yml file  
As above...

